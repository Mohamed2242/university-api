2024-09-29 00:56:41.442 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Assistant'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 00:56:41.468 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Doctor'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 00:56:41.469 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Employee'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 00:56:41.469 +03:00 [WRN] No store type was specified for the decimal property 'Cgpa' on entity type 'Student'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 00:56:42.481 +03:00 [INF] Executed DbCommand (192ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 00:56:42.553 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 00:56:42.555 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 00:56:42.556 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 00:56:42.557 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 00:56:42.674 +03:00 [INF] User profile is available. Using 'C:\Users\lenovo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-09-29 00:56:42.848 +03:00 [INF] Now listening on: http://localhost:5101
2024-09-29 00:56:42.888 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-09-29 00:56:42.888 +03:00 [INF] Hosting environment: Development
2024-09-29 00:56:42.888 +03:00 [INF] Content root path: E:\Web Projects\,Net\UniversityApp\UniversityAPI\UniversityAPI
2024-09-29 00:56:43.803 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 00:56:44.159 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 363.5982ms
2024-09-29 00:56:44.225 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 00:56:44.227 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 00:56:44.229 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 4.9688ms
2024-09-29 00:56:44.231 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 4.0582ms
2024-09-29 00:56:44.253 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 00:56:44.297 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 44.1886ms
2024-09-29 00:56:44.537 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 00:56:44.625 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 87.6946ms
2024-09-29 00:56:55.044 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 00:56:55.044 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 00:56:55.049 +03:00 [WRN] Failed to determine the https port for redirect.
2024-09-29 00:56:55.050 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:55.050 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:55.052 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 9.057ms
2024-09-29 00:56:55.053 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 9.3634ms
2024-09-29 00:56:55.058 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 00:56:55.060 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:55.238 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 00:56:55.258 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
2024-09-29 00:56:55.262 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 00:56:55.266 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 00:56:55.267 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 401 0 null 208.8588ms
2024-09-29 00:56:55.267 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 00:56:55.271 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - null null
2024-09-29 00:56:55.271 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:55.272 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:55.272 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - 204 null null 0.478ms
2024-09-29 00:56:55.273 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 00:56:55.273 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:55.274 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 00:56:55.274 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
2024-09-29 00:56:55.274 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 00:56:55.274 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
2024-09-29 00:56:55.275 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 00:56:55.275 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 00:56:55.275 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 401 0 null 7.9427ms
2024-09-29 00:56:55.276 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 00:56:55.280 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 00:56:55.280 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:55.281 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 00:56:55.281 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 5:10:21 PM', Current time (UTC): '9/28/2024 9:56:55 PM'.
2024-09-29 00:56:55.281 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 00:56:55.293 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 00:56:55.293 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 00:56:55.796 +03:00 [INF] Executed DbCommand (90ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 00:56:55.796 +03:00 [INF] Executed DbCommand (97ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 00:56:55.914 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 00:56:55.914 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 00:56:56.045 +03:00 [INF] Executed DbCommand (40ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 00:56:56.057 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 00:56:56.062 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 766.8849ms
2024-09-29 00:56:56.063 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 00:56:56.067 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 793.8607ms
2024-09-29 00:56:56.067 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 00:56:56.067 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:56.072 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 00:56:56.075 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 00:56:56.133 +03:00 [INF] Executed DbCommand (128ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 00:56:56.133 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 00:56:56.133 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 839.9687ms
2024-09-29 00:56:56.133 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 00:56:56.134 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 853.6892ms
2024-09-29 00:56:56.145 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 00:56:56.172 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 00:56:56.192 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 00:56:56.192 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 00:56:56.193 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 117.7206ms
2024-09-29 00:56:56.193 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 00:56:56.194 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 127.3595ms
2024-09-29 00:56:56.194 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 00:56:56.195 +03:00 [INF] CORS policy execution successful.
2024-09-29 00:56:56.195 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 00:56:56.195 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 00:56:56.195 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 00:56:56.198 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 00:56:56.199 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 00:56:56.199 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 00:56:56.199 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 3.9769ms
2024-09-29 00:56:56.199 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 00:56:56.199 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 4.9408ms
2024-09-29 01:00:42.168 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:00:42.171 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:00:42.171 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 3.6289ms
2024-09-29 01:00:42.172 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:00:42.172 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:00:42.172 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:00:42.172 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:00:42.173 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:00:42.269 +03:00 [INF] Executed DbCommand (95ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:00:42.270 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:00:42.270 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:00:42.270 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 97.5249ms
2024-09-29 01:00:42.270 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:00:42.270 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 98.369ms
2024-09-29 01:04:16.171 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:04:16.198 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:04:16.199 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 28.5943ms
2024-09-29 01:04:16.201 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:04:16.201 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:04:16.201 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:04:16.202 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:04:16.202 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:04:16.207 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:04:16.207 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:04:16.207 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:04:16.208 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 5.9726ms
2024-09-29 01:04:16.208 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:04:16.208 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 7.3248ms
2024-09-29 01:10:52.174 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:10:52.174 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:10:52.175 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:10:52.175 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:10:52.176 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 2.5806ms
2024-09-29 01:10:52.176 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 2.5802ms
2024-09-29 01:10:52.179 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:10:52.179 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:10:52.180 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:10:52.180 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:10:52.180 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:10:52.189 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:10:52.190 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:10:52.190 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:10:52.190 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 10.5881ms
2024-09-29 01:10:52.191 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:10:52.191 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 12.0562ms
2024-09-29 01:10:52.191 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:10:52.191 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:10:52.192 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:10:52.192 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:10:52.192 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:10:52.194 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:10:52.194 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:10:52.194 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:10:52.194 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 2.5889ms
2024-09-29 01:10:52.194 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:10:52.195 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.2953ms
2024-09-29 01:22:10.214 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:22:10.245 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:22:10.245 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:22:10.245 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 32.2231ms
2024-09-29 01:22:10.247 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:22:10.249 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 3.3559ms
2024-09-29 01:22:10.249 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:22:10.250 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:22:10.252 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:22:10.252 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:22:10.253 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:22:10.272 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:22:10.272 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:22:10.272 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:22:10.273 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 20.1252ms
2024-09-29 01:22:10.273 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:22:10.273 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 24.1382ms
2024-09-29 01:22:10.274 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:22:10.274 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:22:10.274 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:22:10.274 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:22:10.275 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:22:10.287 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:22:10.287 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:22:10.287 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:22:10.287 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 12.941ms
2024-09-29 01:22:10.287 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:22:10.287 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 13.7609ms
2024-09-29 01:24:30.162 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:24:30.164 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:24:30.165 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 2.8387ms
2024-09-29 01:24:30.166 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:24:30.166 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:24:30.166 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:24:30.166 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:24:30.167 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:24:30.170 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:24:30.170 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:24:30.170 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:24:30.170 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 3.9898ms
2024-09-29 01:24:30.170 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:24:30.170 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 4.7117ms
2024-09-29 01:26:38.115 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - null null
2024-09-29 01:26:38.117 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:26:38.149 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - 204 null null 33.7073ms
2024-09-29 01:26:38.151 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 292
2024-09-29 01:26:38.152 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:26:38.153 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 01:26:38.156 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:26:38.201 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-09-29 01:26:38.210 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI) in 54.8892ms
2024-09-29 01:26:38.211 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 01:26:38.211 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - 400 null application/problem+json; charset=utf-8 59.5002ms
2024-09-29 01:26:52.435 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/add/course - null null
2024-09-29 01:26:52.469 +03:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-09-29 01:26:52.470 +03:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-09-29 01:26:52.470 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/add/course - 405 0 null 35.0377ms
2024-09-29 01:27:18.600 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - null null
2024-09-29 01:27:18.600 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:27:18.601 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - 204 null null 0.3679ms
2024-09-29 01:27:18.601 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 292
2024-09-29 01:27:18.602 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:27:18.602 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 01:27:18.602 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:27:18.603 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2024-09-29 01:27:18.603 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI) in 1.1564ms
2024-09-29 01:27:18.603 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 01:27:18.603 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - 400 null application/problem+json; charset=utf-8 1.8655ms
2024-09-29 01:27:21.850 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/add/course - null null
2024-09-29 01:27:21.852 +03:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-09-29 01:27:21.853 +03:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-09-29 01:27:21.853 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/add/course - 405 0 null 2.2157ms
2024-09-29 01:40:01.193 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:40:01.193 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:01.193 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 0.821ms
2024-09-29 01:40:01.194 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 01:40:01.194 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:01.195 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:40:01.195 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:40:01.195 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 01:40:01.205 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 01:40:01.206 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 01:40:01.206 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 01:40:01.206 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 11.3971ms
2024-09-29 01:40:01.206 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 01:40:01.206 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 12.2288ms
2024-09-29 01:40:22.807 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - null null
2024-09-29 01:40:22.807 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:22.807 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - 204 null null 0.2445ms
2024-09-29 01:40:22.810 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 311
2024-09-29 01:40:22.845 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:22.845 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 01:40:22.845 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:40:22.869 +03:00 [INF] Adding new course: null
2024-09-29 01:40:23.070 +03:00 [INF] Executed DbCommand (102ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Boolean), @p6='?' (DbType = Double), @p7='?' (Size = 4000), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Courses] ([ContainsPracticalOrProject], [CourseId], [CreditHours], [Faculty], [FinalExam], [HaveAssistants], [MidTerm], [Name], [Practical], [Quizzes], [Semester], [TotalMarks])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2024-09-29 01:40:23.080 +03:00 [INF] Course added successfully: null
2024-09-29 01:40:23.081 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:40:23.082 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI) in 236.8669ms
2024-09-29 01:40:23.082 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 01:40:23.082 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - 200 null application/json; charset=utf-8 272.3395ms
2024-09-29 01:40:23.119 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:23.119 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:23.120 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.4319ms
2024-09-29 01:40:23.120 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:23.124 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:23.127 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 7.6434ms
2024-09-29 01:40:23.128 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:23.128 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:23.130 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:23.132 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:40:23.133 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:40:23.551 +03:00 [INF] Executed DbCommand (386ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:40:23.551 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:40:23.552 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:40:23.552 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 419.4632ms
2024-09-29 01:40:23.552 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:23.552 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 423.9719ms
2024-09-29 01:40:23.553 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:23.553 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:23.553 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:23.553 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:40:23.553 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:40:23.555 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:40:23.555 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:40:23.555 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:40:23.555 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 1.9893ms
2024-09-29 01:40:23.555 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:23.555 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 2.5219ms
2024-09-29 01:40:34.510 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:34.510 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:34.510 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.3549ms
2024-09-29 01:40:34.511 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:34.511 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:34.512 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.0534ms
2024-09-29 01:40:34.512 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:34.514 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:34.515 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:34.515 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:40:34.515 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:40:34.516 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:40:34.516 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:40:34.517 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:40:34.517 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 1.9628ms
2024-09-29 01:40:34.517 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:34.517 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 5.0964ms
2024-09-29 01:40:34.517 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:34.517 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:40:34.518 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:34.518 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:40:34.518 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:40:34.519 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:40:34.519 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:40:34.519 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:40:34.520 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 1.6951ms
2024-09-29 01:40:34.520 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:40:34.520 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 2.2695ms
2024-09-29 01:40:54.614 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:40:54.621 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 01:40:54.621 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 01:40:54.621 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 7.3615ms
2024-09-29 01:42:52.576 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:42:52.576 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:42:52.576 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:42:52.576 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.4315ms
2024-09-29 01:42:52.576 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:42:52.576 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.1809ms
2024-09-29 01:42:52.579 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:42:52.580 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:42:52.580 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:42:52.580 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:42:55.797 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:42:57.234 +03:00 [INF] Executed DbCommand (55ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:48:27.500 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Assistant'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 01:48:27.552 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Doctor'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 01:48:27.552 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Employee'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 01:48:27.552 +03:00 [WRN] No store type was specified for the decimal property 'Cgpa' on entity type 'Student'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 01:48:28.307 +03:00 [INF] Executed DbCommand (124ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 01:48:28.361 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 01:48:28.362 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 01:48:28.363 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 01:48:28.364 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 01:48:28.489 +03:00 [INF] User profile is available. Using 'C:\Users\lenovo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-09-29 01:48:28.624 +03:00 [INF] Now listening on: http://localhost:5101
2024-09-29 01:48:28.665 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-09-29 01:48:28.665 +03:00 [INF] Hosting environment: Development
2024-09-29 01:48:28.665 +03:00 [INF] Content root path: E:\Web Projects\,Net\UniversityApp\UniversityAPI\UniversityAPI
2024-09-29 01:48:29.751 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 01:48:29.939 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 193.3009ms
2024-09-29 01:48:29.976 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 01:48:29.976 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 01:48:29.979 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 2.797ms
2024-09-29 01:48:29.979 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 3.336ms
2024-09-29 01:48:30.010 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 01:48:30.038 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 28.1554ms
2024-09-29 01:48:30.342 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 01:48:30.450 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 107.933ms
2024-09-29 01:48:56.580 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:48:56.580 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:48:56.591 +03:00 [WRN] Failed to determine the https port for redirect.
2024-09-29 01:48:56.596 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:48:56.596 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:48:56.598 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 20.9107ms
2024-09-29 01:48:56.598 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 20.9107ms
2024-09-29 01:48:56.602 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:48:56.604 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:48:56.759 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:48:56.772 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:49:18.785 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:49:18.785 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:49:24.423 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:49:24.427 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:49:24.427 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:49:32.020 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:49:35.240 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:49:35.305 +03:00 [INF] Executed DbCommand (62ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:49:53.356 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:49:54.499 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:50:00.595 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:50:00.595 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:50:00.630 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 36201.3468ms
2024-09-29 01:50:00.630 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 63855.9576ms
2024-09-29 01:50:00.631 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:50:00.631 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:50:00.635 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 41849.9517ms
2024-09-29 01:50:00.635 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 64033.474ms
2024-09-29 01:51:27.663 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - null null
2024-09-29 01:51:27.667 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 01:51:27.669 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 01:51:27.670 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - 401 0 null 33.8979ms
2024-09-29 01:53:45.278 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/login - application/json 142
2024-09-29 01:53:45.283 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:53:45.284 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:53:45.290 +03:00 [INF] Route matched with {action = "Login", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(UniversityAPI.Application.DTOs.LoginDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 01:53:45.765 +03:00 [INF] Executed DbCommand (56ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2024-09-29 01:53:45.887 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2024-09-29 01:53:45.887 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Login (UniversityAPI) in 596.1642ms
2024-09-29 01:53:45.887 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:53:45.888 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/login - 401 null text/plain; charset=utf-8 610.3245ms
2024-09-29 01:55:12.982 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/login - application/json 142
2024-09-29 01:55:12.983 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:55:12.983 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:55:12.983 +03:00 [INF] Route matched with {action = "Login", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(UniversityAPI.Application.DTOs.LoginDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 01:55:12.998 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2024-09-29 01:55:13.068 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2024-09-29 01:55:13.068 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Login (UniversityAPI) in 85.3968ms
2024-09-29 01:55:13.068 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:55:13.069 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/login - 401 null text/plain; charset=utf-8 86.9393ms
2024-09-29 01:55:20.483 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/login - application/json 142
2024-09-29 01:55:20.484 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:55:20.484 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:55:20.484 +03:00 [INF] Route matched with {action = "Login", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(UniversityAPI.Application.DTOs.LoginDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 01:55:20.490 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2024-09-29 01:55:20.565 +03:00 [INF] Executing UnauthorizedObjectResult, writing value of type 'System.String'.
2024-09-29 01:55:20.565 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Login (UniversityAPI) in 80.7147ms
2024-09-29 01:55:20.565 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:55:20.565 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/login - 401 null text/plain; charset=utf-8 81.6865ms
2024-09-29 01:55:53.317 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:55:53.318 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:55:53.318 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 3.4051ms
2024-09-29 01:55:53.319 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:55:53.321 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:55:53.321 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:55:53.321 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 2.7407ms
2024-09-29 01:55:53.321 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:55:53.322 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:55:53.322 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:56:05.075 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:56:05.966 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:56:07.800 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:56:08.495 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:56:08.495 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 15172.8752ms
2024-09-29 01:56:08.495 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:56:08.495 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 15176.1955ms
2024-09-29 01:56:08.503 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 01:56:08.503 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:56:08.504 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:56:08.504 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 01:56:08.725 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 01:56:09.795 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 01:56:11.975 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 01:56:13.397 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 01:56:13.397 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 4893.1353ms
2024-09-29 01:56:13.397 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 01:56:13.397 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 4900.6909ms
2024-09-29 01:56:26.119 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/login - application/json 126
2024-09-29 01:56:26.119 +03:00 [INF] CORS policy execution successful.
2024-09-29 01:56:26.119 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:56:26.119 +03:00 [INF] Route matched with {action = "Login", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(UniversityAPI.Application.DTOs.LoginDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 01:56:56.214 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[NormalizedEmail] = @__normalizedEmail_0
2024-09-29 01:56:56.304 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 01:56:56.488 +03:00 [INF] Executed DbCommand (123ms) [Parameters=[@p3='?' (Size = 450), @p4='?' (Size = 4000), @p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0, [RefreshTokenExpiryTime] = @p1, [Token] = @p2
OUTPUT 1
WHERE [Id] = @p3 AND [ConcurrencyStamp] = @p4;
2024-09-29 01:56:56.497 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 01:56:56.497 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Login (UniversityAPI) in 30378.2041ms
2024-09-29 01:56:56.497 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Login (UniversityAPI)'
2024-09-29 01:56:56.498 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/login - 200 null application/json; charset=utf-8 30378.8566ms
2024-09-29 02:03:41.227 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - null null
2024-09-29 02:03:41.264 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI)'
2024-09-29 02:03:41.267 +03:00 [INF] Route matched with {action = "GetCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:04:00.225 +03:00 [INF] Fetching course: MSITCS
2024-09-29 02:04:02.011 +03:00 [INF] Executed DbCommand (293ms) [Parameters=[@__courseId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[CourseId] = @__courseId_0
2024-09-29 02:04:12.530 +03:00 [WRN] Course not found: MSITCS
2024-09-29 02:04:13.278 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:04:13.278 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI) in 32010.7105ms
2024-09-29 02:04:13.278 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI)'
2024-09-29 02:04:13.278 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - 404 null application/json; charset=utf-8 32051.6902ms
2024-09-29 02:04:33.744 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSICS - null null
2024-09-29 02:04:33.748 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI)'
2024-09-29 02:04:33.748 +03:00 [INF] Route matched with {action = "GetCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:04:37.567 +03:00 [INF] Fetching course: MSICS
2024-09-29 02:04:38.429 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__courseId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[CourseId] = @__courseId_0
2024-09-29 02:05:27.244 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Assistant'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:27.270 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Doctor'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:27.270 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Employee'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:27.270 +03:00 [WRN] No store type was specified for the decimal property 'Cgpa' on entity type 'Student'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:27.952 +03:00 [INF] Executed DbCommand (94ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:28.011 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:28.012 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:28.013 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:28.014 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:28.119 +03:00 [INF] User profile is available. Using 'C:\Users\lenovo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-09-29 02:05:28.278 +03:00 [INF] Now listening on: http://localhost:5101
2024-09-29 02:05:28.316 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-09-29 02:05:28.316 +03:00 [INF] Hosting environment: Development
2024-09-29 02:05:28.316 +03:00 [INF] Content root path: E:\Web Projects\,Net\UniversityApp\UniversityAPI\UniversityAPI
2024-09-29 02:05:29.300 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 02:05:29.578 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 285.3158ms
2024-09-29 02:05:29.676 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 02:05:29.676 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 02:05:29.679 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 2.6731ms
2024-09-29 02:05:29.679 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 2.8395ms
2024-09-29 02:05:29.741 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 02:05:29.777 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 36.2426ms
2024-09-29 02:05:30.079 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 02:05:30.233 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 153.1394ms
2024-09-29 02:05:36.164 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:05:36.164 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:05:36.169 +03:00 [WRN] Failed to determine the https port for redirect.
2024-09-29 02:05:36.175 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:36.175 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:36.177 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 13.1825ms
2024-09-29 02:05:36.177 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 13.8822ms
2024-09-29 02:05:36.182 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:05:36.184 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:36.552 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 02:05:36.573 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
2024-09-29 02:05:36.577 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 02:05:36.581 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 02:05:36.581 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 401 0 null 400.0284ms
2024-09-29 02:05:36.582 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:05:36.585 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:36.587 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - null null
2024-09-29 02:05:36.587 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:36.587 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - 204 null null 0.4025ms
2024-09-29 02:05:36.588 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 02:05:36.588 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 02:05:36.588 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
2024-09-29 02:05:36.589 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:36.589 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 02:05:36.589 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 02:05:36.590 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
2024-09-29 02:05:36.589 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 02:05:36.590 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 401 0 null 7.5077ms
2024-09-29 02:05:36.591 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 02:05:36.593 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 02:05:36.594 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:36.594 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 02:05:36.594 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 10:56:55 PM', Current time (UTC): '9/28/2024 11:05:36 PM'.
2024-09-29 02:05:36.594 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 02:05:36.608 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 02:05:36.608 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 02:05:37.067 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 02:05:37.152 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 02:05:37.247 +03:00 [INF] Executed DbCommand (24ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 02:05:37.260 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 02:05:37.361 +03:00 [INF] Executed DbCommand (43ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 02:05:37.373 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 02:05:37.377 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 766.9741ms
2024-09-29 02:05:37.378 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 02:05:37.382 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 794.2736ms
2024-09-29 02:05:37.382 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:05:37.382 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:37.387 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:05:37.391 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:05:37.500 +03:00 [INF] Executed DbCommand (182ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 02:05:37.501 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 02:05:37.501 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 892.8418ms
2024-09-29 02:05:37.501 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 02:05:37.501 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 907.716ms
2024-09-29 02:05:37.543 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:05:37.667 +03:00 [INF] Executed DbCommand (103ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:05:37.687 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:05:37.687 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:05:37.688 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 297.2781ms
2024-09-29 02:05:37.688 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:05:37.689 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 306.778ms
2024-09-29 02:05:37.689 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:05:37.689 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:37.690 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:05:37.690 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:05:37.691 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:05:37.693 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:05:37.694 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:05:37.694 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:05:37.694 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 4.0976ms
2024-09-29 02:05:37.694 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:05:37.694 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.237ms
2024-09-29 02:05:40.134 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:05:40.134 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:05:40.134 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:40.134 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:40.135 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.1216ms
2024-09-29 02:05:40.135 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.9129ms
2024-09-29 02:05:40.136 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:05:40.137 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:05:40.138 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:05:40.142 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:05:52.641 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:05:58.773 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Assistant'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:58.807 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Doctor'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:58.807 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Employee'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:58.807 +03:00 [WRN] No store type was specified for the decimal property 'Cgpa' on entity type 'Student'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:05:59.626 +03:00 [INF] Executed DbCommand (48ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:59.693 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:59.694 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:59.696 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:59.696 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:05:59.810 +03:00 [INF] User profile is available. Using 'C:\Users\lenovo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-09-29 02:05:59.920 +03:00 [INF] Now listening on: http://localhost:5101
2024-09-29 02:05:59.960 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-09-29 02:05:59.960 +03:00 [INF] Hosting environment: Development
2024-09-29 02:05:59.960 +03:00 [INF] Content root path: E:\Web Projects\,Net\UniversityApp\UniversityAPI\UniversityAPI
2024-09-29 02:06:00.845 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 02:06:01.087 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 248.6046ms
2024-09-29 02:06:01.119 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 02:06:01.119 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 02:06:01.122 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 2.9588ms
2024-09-29 02:06:01.122 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 2.654ms
2024-09-29 02:06:01.162 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 02:06:01.194 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 31.5905ms
2024-09-29 02:06:01.522 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 02:06:01.659 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 137.0639ms
2024-09-29 02:06:45.992 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:06:45.992 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:06:46.004 +03:00 [WRN] Failed to determine the https port for redirect.
2024-09-29 02:06:46.009 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:06:46.009 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:06:46.011 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 20.8764ms
2024-09-29 02:06:46.011 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 20.857ms
2024-09-29 02:06:46.016 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:06:46.017 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:06:46.198 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:06:46.209 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:06:46.282 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:06:46.338 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:06:46.360 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:06:46.364 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:06:46.369 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:06:46.371 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 159.0531ms
2024-09-29 02:06:46.372 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:06:46.372 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:06:46.374 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:06:46.374 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:06:46.376 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:06:46.377 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 362.507ms
2024-09-29 02:06:46.387 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:06:46.388 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:06:46.388 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:06:46.388 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 13.9676ms
2024-09-29 02:06:46.388 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:06:46.388 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 19.3329ms
2024-09-29 02:09:54.411 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - null null
2024-09-29 02:09:54.414 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:09:54.414 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - 204 null null 3.2864ms
2024-09-29 02:09:54.415 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 348
2024-09-29 02:09:54.416 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:09:54.419 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:09:54.422 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:09:58.654 +03:00 [INF] Adding new course: null
2024-09-29 02:15:10.783 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Assistant'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:15:10.815 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Doctor'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:15:10.816 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Employee'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:15:10.816 +03:00 [WRN] No store type was specified for the decimal property 'Cgpa' on entity type 'Student'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 02:15:11.816 +03:00 [INF] Executed DbCommand (189ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:15:11.874 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:15:11.876 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:15:11.877 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:15:11.878 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 02:15:11.992 +03:00 [INF] User profile is available. Using 'C:\Users\lenovo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-09-29 02:15:12.096 +03:00 [INF] Now listening on: http://localhost:5101
2024-09-29 02:15:12.134 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-09-29 02:15:12.135 +03:00 [INF] Hosting environment: Development
2024-09-29 02:15:12.135 +03:00 [INF] Content root path: E:\Web Projects\,Net\UniversityApp\UniversityAPI\UniversityAPI
2024-09-29 02:15:12.878 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 02:15:13.366 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 496.14ms
2024-09-29 02:15:13.491 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 02:15:13.495 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 3.6943ms
2024-09-29 02:15:13.531 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 02:15:13.533 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 1.9955ms
2024-09-29 02:15:13.536 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 02:15:13.566 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 29.6603ms
2024-09-29 02:15:13.863 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 02:15:13.994 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 131.4277ms
2024-09-29 02:15:16.782 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:15:16.783 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:15:16.787 +03:00 [WRN] Failed to determine the https port for redirect.
2024-09-29 02:15:16.789 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:16.789 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:16.791 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 7.7936ms
2024-09-29 02:15:16.791 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 9.4745ms
2024-09-29 02:15:16.795 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:15:16.798 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:16.938 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:16.950 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:17.026 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:15:17.139 +03:00 [INF] Executed DbCommand (45ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:15:17.140 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 02:15:17.145 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:15:17.150 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:15:17.153 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 199.3285ms
2024-09-29 02:15:17.154 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:17.154 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:17.157 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:17.157 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:17.158 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 363.5578ms
2024-09-29 02:15:17.159 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:15:17.171 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:15:17.172 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 02:15:17.172 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:15:17.173 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 15.5728ms
2024-09-29 02:15:17.173 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:17.173 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 22.6058ms
2024-09-29 02:15:18.425 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:15:18.427 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:18.427 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 2.2157ms
2024-09-29 02:15:18.433 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:15:18.434 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:18.437 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:18.441 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:18.448 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:15:18.475 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:15:18.499 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:15:18.499 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:15:18.500 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 59.3383ms
2024-09-29 02:15:18.500 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:18.502 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 68.882ms
2024-09-29 02:15:18.502 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:15:18.503 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:18.503 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:18.503 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:18.504 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:15:18.506 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:15:18.507 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:15:18.507 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:15:18.507 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 3.9687ms
2024-09-29 02:15:18.507 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:18.507 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.0315ms
2024-09-29 02:15:25.604 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:15:25.605 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:25.605 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.9694ms
2024-09-29 02:15:25.606 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:15:25.606 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:25.607 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:25.607 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:25.607 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:15:25.611 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:15:25.611 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 02:15:25.611 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:15:25.611 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 4.4971ms
2024-09-29 02:15:25.612 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:25.612 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 5.4745ms
2024-09-29 02:15:25.612 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:15:25.613 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:25.613 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:25.613 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:25.614 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:15:25.616 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:15:25.616 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 02:15:25.616 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:15:25.616 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 3.0816ms
2024-09-29 02:15:25.616 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:15:25.616 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 4.071ms
2024-09-29 02:15:27.303 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:15:27.303 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:27.303 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 0.3469ms
2024-09-29 02:15:27.304 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:15:27.304 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:27.304 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:27.304 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:27.305 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:15:27.308 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:15:27.309 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:15:27.309 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:15:27.309 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 4.5009ms
2024-09-29 02:15:27.309 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:27.310 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.6116ms
2024-09-29 02:15:27.311 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:15:27.311 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:15:27.311 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:27.311 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:15:27.312 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:15:27.314 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:15:27.315 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:15:27.315 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:15:27.315 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 3.6575ms
2024-09-29 02:15:27.315 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:15:27.315 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 4.7559ms
2024-09-29 02:25:21.538 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - null null
2024-09-29 02:25:21.539 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:25:21.539 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - 204 null null 1.4981ms
2024-09-29 02:25:21.540 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 349
2024-09-29 02:25:21.541 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:25:21.542 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:25:21.545 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:25:48.195 +03:00 [INF] Adding new course: null
2024-09-29 02:25:50.413 +03:00 [INF] Executed DbCommand (148ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Boolean), @p6='?' (DbType = Double), @p7='?' (Size = 4000), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Courses] ([ContainsPracticalOrProject], [CourseId], [CreditHours], [Faculty], [FinalExam], [HaveAssistants], [MidTerm], [Name], [Practical], [Quizzes], [Semester], [TotalMarks])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2024-09-29 02:25:51.303 +03:00 [INF] Course added successfully: null
2024-09-29 02:25:55.543 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:25:55.581 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI) in 34035.7153ms
2024-09-29 02:25:55.581 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:25:55.581 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - 200 null application/json; charset=utf-8 34040.4464ms
2024-09-29 02:25:55.609 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:25:55.609 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:25:55.609 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.4585ms
2024-09-29 02:25:55.610 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:25:55.611 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:25:55.611 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:25:55.613 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 3.2642ms
2024-09-29 02:25:55.613 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:25:55.614 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:25:55.614 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:25:55.615 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:25:55.618 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:25:55.618 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 02:25:55.618 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:25:55.618 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 3.6776ms
2024-09-29 02:25:55.618 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:25:55.618 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 7.3686ms
2024-09-29 02:25:55.619 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:25:55.619 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:25:55.620 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:25:55.620 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:25:55.620 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:25:55.622 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:25:55.622 +03:00 [WRN] No courses found for faculty ID: Faculty of Computer Science
2024-09-29 02:25:55.622 +03:00 [INF] Executing NotFoundObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:25:55.622 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 2.7808ms
2024-09-29 02:25:55.622 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:25:55.623 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 404 null application/json; charset=utf-8 3.4338ms
2024-09-29 02:34:15.363 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/add/course - application/json 511
2024-09-29 02:34:15.365 +03:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-09-29 02:34:15.365 +03:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-09-29 02:34:15.365 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/add/course - 405 0 null 37.7147ms
2024-09-29 02:34:45.659 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 511
2024-09-29 02:34:45.667 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:34:45.668 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:41:06.607 +03:00 [INF] Adding new course: null
2024-09-29 02:41:07.488 +03:00 [INF] Executed DbCommand (231ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Boolean), @p6='?' (DbType = Double), @p7='?' (Size = 4000), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Courses] ([ContainsPracticalOrProject], [CourseId], [CreditHours], [Faculty], [FinalExam], [HaveAssistants], [MidTerm], [Name], [Practical], [Quizzes], [Semester], [TotalMarks])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2024-09-29 02:41:07.690 +03:00 [INF] Course added successfully: null
2024-09-29 02:41:09.336 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:41:09.336 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI) in 383668.4096ms
2024-09-29 02:41:09.336 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:41:09.336 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - 200 null application/json; charset=utf-8 383677.4919ms
2024-09-29 02:41:25.095 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 490
2024-09-29 02:41:25.096 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:41:25.096 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:41:33.107 +03:00 [INF] Adding new course: Concepts of Programming Languages
2024-09-29 02:41:45.250 +03:00 [INF] Executed DbCommand (242ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Boolean), @p6='?' (DbType = Double), @p7='?' (Size = 4000), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000), @p15='?' (Size = 4000), @p16='?' (Size = 4000), @p17='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Courses] ([ContainsPracticalOrProject], [CourseId], [CreditHours], [Faculty], [FinalExam], [HaveAssistants], [MidTerm], [Name], [Practical], [Quizzes], [Semester], [TotalMarks])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
MERGE [Departments] USING (
VALUES (@p12, @p13, @p14, 0),
(@p15, @p16, @p17, 1)) AS i ([DepartmentId], [Faculty], [Name], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([DepartmentId], [Faculty], [Name])
VALUES (i.[DepartmentId], i.[Faculty], i.[Name])
OUTPUT INSERTED.[Id], i._Position;
2024-09-29 02:41:45.646 +03:00 [INF] Executed DbCommand (391ms) [Parameters=[@p18='?' (DbType = Int32), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepartmentCourses] ([CoursesId], [DepartmentsId])
VALUES (@p18, @p19),
(@p20, @p21);
2024-09-29 02:41:47.621 +03:00 [INF] Course added successfully: Concepts of Programming Languages
2024-09-29 02:41:49.330 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:41:49.330 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI) in 24234.5211ms
2024-09-29 02:41:49.330 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:41:49.331 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - 200 null application/json; charset=utf-8 24235.7095ms
2024-09-29 02:42:11.305 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:42:11.306 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:42:11.306 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:42:11.306 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:42:11.306 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.2609ms
2024-09-29 02:42:11.306 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 31.1869ms
2024-09-29 02:42:11.309 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:42:11.310 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:42:11.327 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:42:11.327 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:42:11.328 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:42:11.340 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:42:11.833 +03:00 [INF] Executed DbCommand (174ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:42:11.839 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:42:11.839 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:42:11.900 +03:00 [INF] Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:42:12.800 +03:00 [INF] Executed DbCommand (812ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:42:13.120 +03:00 [INF] Executed DbCommand (243ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:42:13.126 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 1799.0116ms
2024-09-29 02:42:13.143 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:42:13.144 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:42:13.173 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 1865.3997ms
2024-09-29 02:42:13.174 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:42:13.174 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:42:13.175 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:42:13.175 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:42:22.008 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:42:22.011 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:42:33.415 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:42:34.235 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:42:35.985 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:42:41.734 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:42:45.770 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:42:45.970 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:43:27.084 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 73909.1775ms
2024-09-29 02:43:27.085 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:43:27.085 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:43:27.087 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 73913.1816ms
2024-09-29 02:43:58.167 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:43:58.167 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:43:58.170 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.4067ms
2024-09-29 02:43:58.171 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:43:58.171 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:43:58.171 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:43:58.172 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:43:58.172 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.8782ms
2024-09-29 02:43:58.175 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:43:58.175 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:43:58.176 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:43:58.178 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:43:58.190 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:43:58.191 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:43:58.191 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:43:58.198 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:43:58.207 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:43:58.215 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:43:58.217 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 41.4029ms
2024-09-29 02:43:58.217 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:43:58.218 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:43:58.219 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 47.6822ms
2024-09-29 02:43:58.220 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:43:58.220 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:43:58.220 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:43:58.220 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:43:58.221 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:43:58.222 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:43:58.222 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:43:58.223 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:43:58.223 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:43:58.223 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:43:58.224 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:43:58.224 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:43:58.225 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 4.9298ms
2024-09-29 02:43:58.225 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:43:58.226 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:43:58.227 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 7.2264ms
2024-09-29 02:45:15.102 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:45:15.102 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:45:15.104 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:45:15.104 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:45:15.104 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 3.5176ms
2024-09-29 02:45:15.104 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 3.5176ms
2024-09-29 02:45:15.107 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:45:15.108 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:45:15.108 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:45:15.108 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:45:18.969 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:45:21.832 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:45:28.476 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:45:32.119 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:45:36.705 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:45:36.713 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:45:36.713 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:45:36.714 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:45:36.714 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:45:37.875 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:45:38.818 +03:00 [INF] Executed DbCommand (943ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:45:38.853 +03:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:45:38.857 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:45:38.870 +03:00 [INF] Executed DbCommand (16ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:45:44.617 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:45:46.366 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:45:48.069 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:45:48.102 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 32993.9309ms
2024-09-29 02:45:48.102 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:45:48.103 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:45:48.104 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:45:48.105 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:45:48.105 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 32997.9325ms
2024-09-29 02:45:48.113 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:45:48.144 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 11430.6133ms
2024-09-29 02:45:48.145 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:45:48.145 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:45:48.146 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 11441.1405ms
2024-09-29 02:47:21.344 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 02:47:21.427 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 83.7913ms
2024-09-29 02:47:21.520 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 02:47:21.524 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 02:47:21.528 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 02:47:21.532 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 7.3585ms
2024-09-29 02:47:21.532 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 12.2886ms
2024-09-29 02:47:21.547 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 18.8444ms
2024-09-29 02:47:22.000 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 02:47:22.018 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 17.9608ms
2024-09-29 02:55:44.044 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 02:55:44.049 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 4.6124ms
2024-09-29 02:55:44.109 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 02:55:44.109 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 0.3411ms
2024-09-29 02:55:44.112 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 02:55:44.112 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 0.1376ms
2024-09-29 02:55:44.113 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 02:55:44.117 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 3.8621ms
2024-09-29 02:55:44.370 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 02:55:44.386 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 16.3128ms
2024-09-29 02:55:52.565 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:55:52.566 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:55:52.566 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.7339ms
2024-09-29 02:55:52.566 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:55:52.595 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:55:52.598 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:55:52.598 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 31.672ms
2024-09-29 02:55:52.601 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:55:52.601 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:55:52.604 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:55:52.604 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:55:52.613 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:55:52.620 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:55:52.620 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:55:52.621 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:55:52.630 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:55:52.639 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:55:52.650 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:55:52.652 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 47.6554ms
2024-09-29 02:55:52.652 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:55:52.652 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:55:52.654 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 58.7198ms
2024-09-29 02:55:52.655 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:55:52.655 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:55:52.656 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:55:52.656 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:55:52.656 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:55:52.657 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:55:52.659 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:55:52.659 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:55:52.659 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:55:52.660 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:55:52.661 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:55:52.662 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:55:52.663 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 7.5366ms
2024-09-29 02:55:52.663 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:55:52.664 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:55:52.665 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 10.218ms
2024-09-29 02:55:57.073 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:55:57.073 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:55:57.073 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 0.367ms
2024-09-29 02:55:57.074 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:55:57.074 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:55:57.075 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:55:57.078 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:55:57.078 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:55:57.081 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:55:57.081 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:55:57.081 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:55:57.082 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 3.9856ms
2024-09-29 02:55:57.082 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:55:57.082 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 7.7207ms
2024-09-29 02:55:57.084 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 02:55:57.085 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:55:57.085 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:55:57.085 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:55:57.085 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 02:55:57.087 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 02:55:57.087 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:55:57.087 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:55:57.087 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 2.4494ms
2024-09-29 02:55:57.087 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 02:55:57.088 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.2615ms
2024-09-29 02:57:38.707 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - null null
2024-09-29 02:57:38.707 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:57:38.707 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/add/course - 204 null null 0.3932ms
2024-09-29 02:57:38.710 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - application/json 297
2024-09-29 02:57:38.711 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:57:38.711 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:57:38.714 +03:00 [INF] Route matched with {action = "AddCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCourse(UniversityAPI.Application.DTOs.CourseDTO) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:57:48.383 +03:00 [INF] Adding new course: Intro to Component Science
2024-09-29 02:58:36.295 +03:00 [INF] Executed DbCommand (123ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Double), @p5='?' (DbType = Boolean), @p6='?' (DbType = Double), @p7='?' (Size = 4000), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double), @p12='?' (Size = 4000), @p13='?' (Size = 4000), @p14='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Courses] ([ContainsPracticalOrProject], [CourseId], [CreditHours], [Faculty], [FinalExam], [HaveAssistants], [MidTerm], [Name], [Practical], [Quizzes], [Semester], [TotalMarks])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
INSERT INTO [Departments] ([DepartmentId], [Faculty], [Name])
OUTPUT INSERTED.[Id]
VALUES (@p12, @p13, @p14);
2024-09-29 02:58:36.335 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@p15='?' (DbType = Int32), @p16='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [DepartmentCourses] ([CoursesId], [DepartmentsId])
VALUES (@p15, @p16);
2024-09-29 02:58:37.444 +03:00 [INF] Course added successfully: Intro to Component Science
2024-09-29 02:58:39.814 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-09-29 02:58:39.814 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI) in 61100.5168ms
2024-09-29 02:58:39.814 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.AddCourse (UniversityAPI)'
2024-09-29 02:58:39.815 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/add/course - 200 null application/json; charset=utf-8 61104.5951ms
2024-09-29 02:58:39.839 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:58:39.839 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:58:39.839 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.1892ms
2024-09-29 02:58:39.840 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:58:39.840 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:58:39.840 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.2354ms
2024-09-29 02:58:39.841 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:58:39.845 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:58:39.848 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:58:39.848 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:58:39.848 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:58:39.850 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:58:39.856 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:58:39.857 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:58:39.857 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 02:58:39.857 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 02:58:39.862 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:58:39.871 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:58:39.879 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:58:39.881 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 32.9177ms
2024-09-29 02:58:39.881 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:58:39.882 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 02:58:39.883 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 42.374ms
2024-09-29 02:58:39.884 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 02:58:39.884 +03:00 [INF] CORS policy execution successful.
2024-09-29 02:58:39.884 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 02:58:39.884 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 02:58:53.525 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 02:58:53.739 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 02:59:13.848 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:59:13.900 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:59:13.911 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:59:14.236 +03:00 [INF] Executed DbCommand (125ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[StudentId], [s].[CourseId], [s].[FinalExam], [s].[Id], [s].[MidTerm], [s].[Practical], [s].[Quizzes], [s].[TotalMarks]
FROM [StudentDegrees] AS [s]
WHERE [s].[CourseId] = @__p_0
2024-09-29 02:59:23.815 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 02:59:23.846 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 02:59:23.864 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 02:59:23.923 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[StudentId], [s].[CourseId], [s].[FinalExam], [s].[Id], [s].[MidTerm], [s].[Practical], [s].[Quizzes], [s].[TotalMarks]
FROM [StudentDegrees] AS [s]
WHERE [s].[CourseId] = @__p_0
2024-09-29 02:59:45.353 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:00:03.802 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:00:04.058 +03:00 [INF] Executed DbCommand (245ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:00:04.105 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 84220.4365ms
2024-09-29 03:00:04.105 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:00:04.105 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 03:00:04.106 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 84222.417ms
2024-09-29 03:04:57.637 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null 0
2024-09-29 03:04:57.642 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 11:56:56 PM', Current time (UTC): '9/29/2024 12:04:57 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:04:57.662 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 11:56:56 PM', Current time (UTC): '9/29/2024 12:04:57 AM'.
2024-09-29 03:04:57.662 +03:00 [INF] Executing endpoint '405 HTTP Method Not Supported'
2024-09-29 03:04:57.662 +03:00 [INF] Executed endpoint '405 HTTP Method Not Supported'
2024-09-29 03:04:57.662 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 405 0 null 25.571ms
2024-09-29 03:05:29.737 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:05:29.743 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 11:56:56 PM', Current time (UTC): '9/29/2024 12:05:29 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:05:29.744 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/28/2024 11:56:56 PM', Current time (UTC): '9/29/2024 12:05:29 AM'.
2024-09-29 03:05:29.745 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 03:05:29.752 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 03:05:29.752 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 14.8049ms
2024-09-29 03:05:53.532 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:05:53.532 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:05:53.532 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:05:53.532 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:05:53.533 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.3173ms
2024-09-29 03:05:53.533 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.3166ms
2024-09-29 03:05:53.537 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:05:53.538 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:05:53.538 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:05:53.538 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:05:53.539 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:05:53.727 +03:00 [INF] Executed DbCommand (178ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:05:53.749 +03:00 [INF] Executed DbCommand (21ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:05:53.751 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:05:53.751 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:05:53.751 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:05:53.780 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:05:53.826 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 03:05:53.839 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 03:05:53.840 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 302.0842ms
2024-09-29 03:05:53.840 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:05:53.841 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 03:05:53.843 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 306.2894ms
2024-09-29 03:05:53.844 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:05:53.844 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:05:53.845 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:05:53.845 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:05:53.845 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:05:53.848 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:05:53.861 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:05:53.862 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:05:53.862 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:05:53.863 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:05:53.874 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:05:53.891 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 03:05:53.907 +03:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 03:05:53.910 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 64.7475ms
2024-09-29 03:05:53.910 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:05:53.910 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 03:05:53.913 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 68.5947ms
2024-09-29 03:06:34.443 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:06:34.447 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:06:34.447 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:06:34.448 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:06:34.450 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:06:34.457 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:06:34.458 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:06:34.458 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:06:34.458 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:06:34.464 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:06:34.492 +03:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 03:06:34.501 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 03:06:34.503 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 56.0169ms
2024-09-29 03:06:34.503 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:06:34.504 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 03:06:34.505 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 62.409ms
2024-09-29 03:11:11.117 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 03:11:11.156 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 38.9156ms
2024-09-29 03:11:11.280 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 03:11:11.280 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 0.3115ms
2024-09-29 03:11:11.289 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 03:11:11.289 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 0.229ms
2024-09-29 03:11:11.290 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 03:11:11.292 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 2.3335ms
2024-09-29 03:11:11.746 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 03:11:11.758 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 11.8668ms
2024-09-29 03:11:26.429 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:11:26.433 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:11:26 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:11:26.433 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:11:26 AM'.
2024-09-29 03:11:26.433 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 03:11:26.433 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 03:11:26.433 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 4.115ms
2024-09-29 03:12:19.830 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:12:19.837 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:19 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:12:19.837 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:19 AM'.
2024-09-29 03:12:19.837 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 03:12:19.837 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 03:12:19.837 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 7.0204ms
2024-09-29 03:12:36.032 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:12:36.032 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.032 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.1815ms
2024-09-29 03:12:36.033 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:12:36.033 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.033 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.1757ms
2024-09-29 03:12:36.033 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:12:36.033 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.034 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:12:36.034 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
2024-09-29 03:12:36.034 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 03:12:36.035 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 03:12:36.035 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 1.4322ms
2024-09-29 03:12:36.035 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:12:36.035 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.036 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:12:36.036 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
2024-09-29 03:12:36.036 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 03:12:36.036 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 03:12:36.036 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 1.0545ms
2024-09-29 03:12:36.120 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - null null
2024-09-29 03:12:36.120 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.120 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - 204 null null 0.2828ms
2024-09-29 03:12:36.121 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 03:12:36.122 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.123 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:12:36.123 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
2024-09-29 03:12:36.123 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 03:12:36.124 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 03:12:36.124 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.124 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:12:36.124 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:12:36 AM'.
2024-09-29 03:12:36.124 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 03:12:36.126 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 03:12:36.127 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 03:12:36.836 +03:00 [INF] Executed DbCommand (261ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 03:12:36.854 +03:00 [INF] Executed DbCommand (301ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 03:12:36.923 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 03:12:36.924 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 03:12:36.979 +03:00 [INF] Executed DbCommand (40ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 03:12:36.981 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 03:12:36.982 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 854.5765ms
2024-09-29 03:12:36.982 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 03:12:36.982 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 858.1119ms
2024-09-29 03:12:36.987 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:12:36.987 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:36.987 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:12:36.990 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:12:36.990 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:12:36.993 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:12:37.012 +03:00 [INF] Executed DbCommand (73ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 03:12:37.012 +03:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:12:37.012 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 03:12:37.012 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 886.2977ms
2024-09-29 03:12:37.012 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 03:12:37.012 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 891.099ms
2024-09-29 03:12:37.013 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:12:37.013 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:12:37.014 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:12:37.036 +03:00 [INF] Executed DbCommand (17ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:12:37.047 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 03:12:37.056 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 03:12:37.058 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 67.9047ms
2024-09-29 03:12:37.058 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:12:37.059 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 03:12:37.060 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 73.2505ms
2024-09-29 03:12:37.061 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:12:37.061 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:12:37.061 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:12:37.061 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:12:37.062 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:12:37.064 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:12:37.071 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:12:37.072 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:12:37.072 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:12:37.072 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:12:37.079 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:12:37.088 +03:00 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 03:12:37.134 +03:00 [INF] Executed DbCommand (46ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 03:12:37.135 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 73.8154ms
2024-09-29 03:12:37.135 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:12:37.136 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 03:12:37.137 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 76.1424ms
2024-09-29 03:13:08.548 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:13:08.552 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:13:08 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:13:08.552 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:13:08 AM'.
2024-09-29 03:13:08.552 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 03:13:08.552 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 03:13:08.552 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 4.3884ms
2024-09-29 03:13:18.491 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:13:18.492 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:13:18 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 03:13:18.492 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 12:05:37 AM', Current time (UTC): '9/29/2024 12:13:18 AM'.
2024-09-29 03:13:18.492 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 03:13:18.492 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 03:13:18.492 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 0.9709ms
2024-09-29 03:13:58.346 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:13:58.380 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:13:58.380 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:13:58.380 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:13:58.384 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:13:58.416 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:13:58.417 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:13:58.417 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:13:58.417 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:13:58.449 +03:00 [INF] Executed DbCommand (32ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[ContainsPracticalOrProject], [t].[CourseId], [t].[CreditHours], [t].[Faculty], [t].[FinalExam], [t].[HaveAssistants], [t].[MidTerm], [t].[Name], [t].[Practical], [t].[Quizzes], [t].[Semester], [t].[TotalMarks], [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[DepartmentId], [t0].[Faculty], [t0].[Name]
FROM [Departments] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks], [d0].[CoursesId], [d0].[DepartmentsId]
    FROM [DepartmentCourses] AS [d0]
    INNER JOIN [Courses] AS [c] ON [d0].[CoursesId] = [c].[Id]
) AS [t] ON [d].[Id] = [t].[DepartmentsId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [d2].[Id], [d2].[DepartmentId], [d2].[Faculty], [d2].[Name]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Departments] AS [d2] ON [d1].[DepartmentsId] = [d2].[Id]
    WHERE [d2].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[CoursesId]
WHERE [d].[Id] = @__p_0
ORDER BY [d].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:13:58.468 +03:00 [INF] Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t1].[CoursesId], [t1].[DoctorsId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [d].[CoursesId], [d].[DoctorsId]
    FROM [DoctorCourses] AS [d]
    INNER JOIN (
        SELECT [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [d0].[Salary]
        FROM [AspNetUsers] AS [a]
        INNER JOIN [Doctors] AS [d0] ON [a].[Id] = [d0].[Id]
    ) AS [t] ON [d].[DoctorsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DoctorsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DoctorCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[DoctorsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[CoursesId], [t0].[DoctorsId], [t0].[Id], [t1].[CoursesId], [t1].[DoctorsId]
2024-09-29 03:13:58.496 +03:00 [INF] Executed DbCommand (28ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[Id], [t0].[AccessFailedCount], [t0].[BackupEmail], [t0].[ConcurrencyStamp], [t0].[Email], [t0].[EmailConfirmed], [t0].[Faculty], [t0].[LockoutEnabled], [t0].[LockoutEnd], [t0].[Name], [t0].[NormalizedEmail], [t0].[NormalizedUserName], [t0].[PasswordHash], [t0].[PhoneNumber], [t0].[PhoneNumberConfirmed], [t0].[RefreshToken], [t0].[RefreshTokenExpiryTime], [t0].[ResetPasswordExpiry], [t0].[Role], [t0].[SecurityStamp], [t0].[Token], [t0].[TwoFactorEnabled], [t0].[UserName], [t0].[Salary], [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t1].[AssistantsId], [t1].[CoursesId], [t1].[Id], [t1].[ContainsPracticalOrProject], [t1].[CourseId], [t1].[CreditHours], [t1].[Faculty], [t1].[FinalExam], [t1].[HaveAssistants], [t1].[MidTerm], [t1].[Name], [t1].[Practical], [t1].[Quizzes], [t1].[Semester], [t1].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [t].[Id], [t].[AccessFailedCount], [t].[BackupEmail], [t].[ConcurrencyStamp], [t].[Email], [t].[EmailConfirmed], [t].[Faculty], [t].[LockoutEnabled], [t].[LockoutEnd], [t].[Name], [t].[NormalizedEmail], [t].[NormalizedUserName], [t].[PasswordHash], [t].[PhoneNumber], [t].[PhoneNumberConfirmed], [t].[RefreshToken], [t].[RefreshTokenExpiryTime], [t].[ResetPasswordExpiry], [t].[Role], [t].[SecurityStamp], [t].[Token], [t].[TwoFactorEnabled], [t].[UserName], [t].[Salary], [a].[AssistantsId], [a].[CoursesId]
    FROM [AssistantCourses] AS [a]
    INNER JOIN (
        SELECT [a0].[Id], [a0].[AccessFailedCount], [a0].[BackupEmail], [a0].[ConcurrencyStamp], [a0].[Email], [a0].[EmailConfirmed], [a0].[Faculty], [a0].[LockoutEnabled], [a0].[LockoutEnd], [a0].[Name], [a0].[NormalizedEmail], [a0].[NormalizedUserName], [a0].[PasswordHash], [a0].[PhoneNumber], [a0].[PhoneNumberConfirmed], [a0].[RefreshToken], [a0].[RefreshTokenExpiryTime], [a0].[ResetPasswordExpiry], [a0].[Role], [a0].[SecurityStamp], [a0].[Token], [a0].[TwoFactorEnabled], [a0].[UserName], [a1].[Salary]
        FROM [AspNetUsers] AS [a0]
        INNER JOIN [Assistants] AS [a1] ON [a0].[Id] = [a1].[Id]
    ) AS [t] ON [a].[AssistantsId] = [t].[Id]
) AS [t0] ON [c].[Id] = [t0].[CoursesId]
LEFT JOIN (
    SELECT [a2].[AssistantsId], [a2].[CoursesId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [AssistantCourses] AS [a2]
    INNER JOIN [Courses] AS [c0] ON [a2].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t1] ON [t0].[Id] = [t1].[AssistantsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t0].[AssistantsId], [t0].[CoursesId], [t0].[Id], [t1].[AssistantsId], [t1].[CoursesId]
2024-09-29 03:13:58.498 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 117.9325ms
2024-09-29 03:13:58.498 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:13:58.499 +03:00 [ERR] An unhandled exception has occurred while executing the request.
System.Text.Json.JsonException: A possible object cycle was detected. This can either be due to a cycle or if the object depth is larger than the maximum allowed depth of 32. Consider using ReferenceHandler.Preserve on JsonSerializerOptions to support cycles. Path: $.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Courses.Departments.Id.
   at System.Text.Json.ThrowHelper.ThrowJsonException_SerializerCycleDetected(Int32 maxDepth)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.IEnumerableDefaultConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.GetMemberAndWriteJson(Object obj, WriteStack& state, Utf8JsonWriter writer)
   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Converters.ListOfTConverter`2.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonCollectionConverter`2.OnTryWrite(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.SerializeAsync(Stream utf8Json, T rootValue, CancellationToken cancellationToken, Object rootValueBoxed)
   at Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2024-09-29 03:13:58.500 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 500 null text/plain; charset=utf-8 154.3258ms
2024-09-29 03:15:14.482 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 03:15:14.485 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 2.3487ms
2024-09-29 03:15:14.537 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 03:15:14.538 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 0.4802ms
2024-09-29 03:15:14.542 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 03:15:14.542 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 0.1535ms
2024-09-29 03:15:14.544 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 03:15:14.546 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 1.904ms
2024-09-29 03:15:14.794 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 03:15:14.803 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 9.2198ms
2024-09-29 03:15:20.896 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:15:20.897 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:15:20.899 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:15:20.899 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:15:20.902 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:15:20.909 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:15:20.911 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:15:20.911 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:15:20.911 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:15:20.914 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 14.6878ms
2024-09-29 03:15:20.914 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:15:20.914 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 17.8792ms
2024-09-29 03:15:29.800 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:15:29.800 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:15:29.803 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:15:29.803 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:15:29.803 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 2.9989ms
2024-09-29 03:15:29.803 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 3.416ms
2024-09-29 03:15:29.805 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:15:29.805 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:15:29.805 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:15:29.805 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:15:29.805 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:15:29.806 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:15:29.807 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:15:29.808 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:15:29.808 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:15:29.808 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:15:29.808 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 2.8565ms
2024-09-29 03:15:29.808 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:15:29.808 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.3093ms
2024-09-29 03:15:29.809 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:15:29.809 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:15:29.809 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:15:29.809 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:15:29.809 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:15:29.810 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:15:29.811 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:15:29.861 +03:00 [INF] Executed DbCommand (49ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:15:29.861 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:15:29.861 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:15:29.861 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 51.9097ms
2024-09-29 03:15:29.861 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:15:29.861 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 52.319ms
2024-09-29 03:16:09.924 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:09.924 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:09.924 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.2309ms
2024-09-29 03:16:09.924 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:09.924 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:09.924 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.1723ms
2024-09-29 03:16:09.927 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:09.927 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:09.928 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:09.928 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:16:09.928 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:16:09.930 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:16:10.004 +03:00 [INF] Executed DbCommand (74ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:10.005 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:10.005 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:16:10.005 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:16:10.005 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 77.0141ms
2024-09-29 03:16:10.005 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:10.005 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 78.1987ms
2024-09-29 03:16:10.006 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:10.006 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:10.006 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:10.006 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:16:10.006 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:16:10.008 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:16:10.012 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:10.013 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:10.013 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:16:10.013 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:16:10.013 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 6.887ms
2024-09-29 03:16:10.013 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:10.013 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 7.2601ms
2024-09-29 03:16:14.718 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:14.718 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:14.718 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:14.718 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:16:14.719 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:16:14.720 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:16:14.721 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:14.722 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:14.722 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:16:14.722 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:16:14.722 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 3.3705ms
2024-09-29 03:16:14.722 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:14.722 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.9204ms
2024-09-29 03:16:14.723 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:14.723 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:14.723 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:14.723 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:16:14.723 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:16:14.724 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:16:14.725 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:14.726 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:14.726 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:16:14.726 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:16:14.726 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 3.1418ms
2024-09-29 03:16:14.726 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:14.726 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.5439ms
2024-09-29 03:16:55.168 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:55.168 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:55.168 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.298ms
2024-09-29 03:16:55.169 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 03:16:55.169 +03:00 [INF] CORS policy execution successful.
2024-09-29 03:16:55.172 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:55.172 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 03:16:55.172 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 03:16:55.173 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 03:16:55.176 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:55.177 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 03:16:55.177 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 03:16:55.177 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 03:16:55.177 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 5.5985ms
2024-09-29 03:16:55.177 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 03:16:55.177 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 7.9788ms
2024-09-29 23:16:40.126 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Assistant'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 23:16:40.175 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Doctor'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 23:16:40.176 +03:00 [WRN] No store type was specified for the decimal property 'Salary' on entity type 'Employee'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 23:16:40.176 +03:00 [WRN] No store type was specified for the decimal property 'Cgpa' on entity type 'Student'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2024-09-29 23:16:40.950 +03:00 [INF] Executed DbCommand (117ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 23:16:41.040 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 23:16:41.042 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 23:16:41.043 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 23:16:41.044 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE [a].[NormalizedName] = @__normalizedName_0
2024-09-29 23:16:41.190 +03:00 [INF] User profile is available. Using 'C:\Users\lenovo\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-09-29 23:16:41.327 +03:00 [INF] Now listening on: http://localhost:5101
2024-09-29 23:16:41.366 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2024-09-29 23:16:41.366 +03:00 [INF] Hosting environment: Development
2024-09-29 23:16:41.366 +03:00 [INF] Content root path: E:\Web Projects\,Net\UniversityApp\UniversityAPI\UniversityAPI
2024-09-29 23:16:43.743 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.html - null null
2024-09-29 23:16:44.364 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.html - 200 null text/html;charset=utf-8 630.1162ms
2024-09-29 23:16:44.633 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/swagger-ui.css - null null
2024-09-29 23:16:44.634 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.css - null null
2024-09-29 23:16:44.636 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/swagger-ui-bundle.js - null null
2024-09-29 23:16:44.642 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/swagger-ui-standalone-preset.js - null null
2024-09-29 23:16:44.644 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - null null
2024-09-29 23:16:44.646 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/index.js - null null
2024-09-29 23:16:44.702 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_framework/aspnetcore-browser-refresh.js - 200 13762 application/javascript; charset=utf-8 59.6741ms
2024-09-29 23:16:44.757 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.js - 200 null application/javascript;charset=utf-8 110.7716ms
2024-09-29 23:16:44.759 +03:00 [INF] The file /swagger-ui.css was not modified
2024-09-29 23:16:44.759 +03:00 [INF] The file /index.css was not modified
2024-09-29 23:16:44.759 +03:00 [INF] The file /swagger-ui-bundle.js was not modified
2024-09-29 23:16:44.760 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/index.css - 304 null text/css 125.6793ms
2024-09-29 23:16:44.760 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/swagger-ui-bundle.js - 304 null text/javascript 123.8112ms
2024-09-29 23:16:44.760 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/swagger-ui.css - 304 null text/css 126.8961ms
2024-09-29 23:16:44.796 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/_vs/browserLink - null null
2024-09-29 23:16:44.825 +03:00 [INF] The file /swagger-ui-standalone-preset.js was not modified
2024-09-29 23:16:44.825 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/swagger-ui-standalone-preset.js - 304 null text/javascript 182.844ms
2024-09-29 23:16:44.872 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/_vs/browserLink - 200 null text/javascript; charset=UTF-8 76.6599ms
2024-09-29 23:16:45.177 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - null null
2024-09-29 23:16:45.558 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 381.2933ms
2024-09-29 23:16:56.034 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:16:56.038 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:16:56.039 +03:00 [WRN] Failed to determine the https port for redirect.
2024-09-29 23:16:56.040 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:56.040 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:56.041 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 7.578ms
2024-09-29 23:16:56.041 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 2.9764ms
2024-09-29 23:16:56.042 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:16:56.043 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:56.300 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 23:16:56.335 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
2024-09-29 23:16:56.342 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 23:16:56.346 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 23:16:56.346 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 304.123ms
2024-09-29 23:16:56.347 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:16:56.350 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:56.350 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - null null
2024-09-29 23:16:56.350 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:56.350 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Home/refresh - 204 null null 0.4667ms
2024-09-29 23:16:56.351 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 23:16:56.352 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:56.352 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 23:16:56.353 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
2024-09-29 23:16:56.353 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 23:16:56.353 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
2024-09-29 23:16:56.354 +03:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2024-09-29 23:16:56.354 +03:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-09-29 23:16:56.354 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 401 0 null 7.4034ms
2024-09-29 23:16:56.355 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 23:16:56.357 +03:00 [INF] Request starting HTTP/1.1 POST http://localhost:5101/api/Home/refresh - application/json 412
2024-09-29 23:16:56.358 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:56.358 +03:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-09-29 23:16:56.358 +03:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '9/29/2024 1:12:36 AM', Current time (UTC): '9/29/2024 8:16:56 PM'.
2024-09-29 23:16:56.358 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 23:16:56.374 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 23:16:56.374 +03:00 [INF] Route matched with {action = "Refresh", controller = "Home"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Refresh(UniversityAPI.Application.DTOs.TokenApiDTO) on controller UniversityAPI.Controllers.HomeController (UniversityAPI).
2024-09-29 23:16:56.880 +03:00 [INF] Executed DbCommand (39ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 23:16:56.885 +03:00 [INF] Executed DbCommand (87ms) [Parameters=[@__name_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[BackupEmail], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[Faculty], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[Name], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[RefreshToken], [a].[RefreshTokenExpiryTime], [a].[ResetPasswordExpiry], [a].[Role], [a].[SecurityStamp], [a].[Token], [a].[TwoFactorEnabled], [a].[UserName], [a0].[Salary], [d].[Salary], [e].[Position], [e].[Salary], [s].[Cgpa], [s].[CurrentSemester], [s].[Department], [s].[SeatNumber], [s].[TotalCreditHours], CASE
    WHEN [s].[Id] IS NOT NULL THEN N'Student'
    WHEN [e].[Id] IS NOT NULL THEN N'Employee'
    WHEN [d].[Id] IS NOT NULL THEN N'Doctor'
    WHEN [a0].[Id] IS NOT NULL THEN N'Assistant'
END AS [Discriminator]
FROM [AspNetUsers] AS [a]
LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
WHERE [a].[Name] = @__name_0
2024-09-29 23:16:56.997 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 23:16:56.997 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__refreshToken_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [AspNetUsers] AS [a]
        LEFT JOIN [Assistants] AS [a0] ON [a].[Id] = [a0].[Id]
        LEFT JOIN [Doctors] AS [d] ON [a].[Id] = [d].[Id]
        LEFT JOIN [Employees] AS [e] ON [a].[Id] = [e].[Id]
        LEFT JOIN [Students] AS [s] ON [a].[Id] = [s].[Id]
        WHERE [a].[RefreshToken] = @__refreshToken_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2024-09-29 23:16:57.323 +03:00 [INF] Executed DbCommand (254ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 23:16:57.336 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 23:16:57.339 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 962.6246ms
2024-09-29 23:16:57.339 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 23:16:57.344 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 992.6676ms
2024-09-29 23:16:57.344 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:16:57.344 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:57.349 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:16:57.353 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:16:57.459 +03:00 [INF] Executed DbCommand (390ms) [Parameters=[@p1='?' (Size = 450), @p2='?' (Size = 4000), @p0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [RefreshToken] = @p0
OUTPUT 1
WHERE [Id] = @p1 AND [ConcurrencyStamp] = @p2;
2024-09-29 23:16:57.459 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.TokenApiDTO'.
2024-09-29 23:16:57.460 +03:00 [INF] Executed action UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI) in 1084.9536ms
2024-09-29 23:16:57.460 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.HomeController.Refresh (UniversityAPI)'
2024-09-29 23:16:57.460 +03:00 [INF] Request finished HTTP/1.1 POST http://localhost:5101/api/Home/refresh - 200 null application/json; charset=utf-8 1102.4248ms
2024-09-29 23:16:57.581 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:16:57.647 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:16:58.082 +03:00 [INF] Executed DbCommand (141ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:16:58.118 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:16:58.119 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:16:58.119 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:16:58.130 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 777.0868ms
2024-09-29 23:16:58.130 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:16:58.133 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 789.2082ms
2024-09-29 23:16:58.134 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:16:58.134 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:16:58.135 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:16:58.135 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:16:58.136 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:16:58.139 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:16:58.148 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:16:58.149 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:16:58.150 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:16:58.150 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:16:58.150 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 15.3978ms
2024-09-29 23:16:58.150 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:16:58.151 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 16.9857ms
2024-09-29 23:17:48.831 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:48.833 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:48.834 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 3.0806ms
2024-09-29 23:17:48.834 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:48.835 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:48.835 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:48.837 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.9446ms
2024-09-29 23:17:48.838 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:48.841 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:48.841 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:17:48.842 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:17:48.845 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:17:48.854 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:48.856 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:48.857 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:17:48.857 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:17:48.857 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 15.5314ms
2024-09-29 23:17:48.857 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:48.857 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 21.7785ms
2024-09-29 23:17:48.858 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:48.858 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:48.858 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:48.858 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:17:48.859 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:17:48.860 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:17:48.862 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:48.863 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:48.863 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:17:48.863 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:17:48.863 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 5.2193ms
2024-09-29 23:17:48.863 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:48.864 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.9105ms
2024-09-29 23:17:59.647 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:59.647 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:59.647 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:59.647 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:59.647 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.4287ms
2024-09-29 23:17:59.647 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.1449ms
2024-09-29 23:17:59.648 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:59.648 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:59.649 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:59.649 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:17:59.649 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:17:59.651 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:17:59.659 +03:00 [INF] Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:59.661 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:59.661 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:17:59.661 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:17:59.661 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 12.5241ms
2024-09-29 23:17:59.661 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:59.662 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 13.3266ms
2024-09-29 23:17:59.662 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:17:59.662 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:17:59.663 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:59.663 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:17:59.663 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:17:59.666 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:17:59.668 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:59.670 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:17:59.671 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:17:59.671 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:17:59.671 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 8.2439ms
2024-09-29 23:17:59.671 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:17:59.671 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 8.9827ms
2024-09-29 23:18:04.588 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 23:18:04.588 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:18:04.589 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 23:18:04.589 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:18:04.589 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 0.3862ms
2024-09-29 23:18:04.589 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 204 null null 0.1739ms
2024-09-29 23:18:04.590 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 23:18:04.590 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:18:04.590 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 23:18:04.593 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:18:04.620 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 23:18:04.629 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 23:18:04.632 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:18:04.632 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:18:04.633 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 39.6802ms
2024-09-29 23:18:04.633 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 23:18:04.633 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 43.258ms
2024-09-29 23:18:04.634 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - null null
2024-09-29 23:18:04.634 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:18:04.634 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 23:18:04.634 +03:00 [INF] Route matched with {action = "GetAllDepartments", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllDepartments(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:18:04.635 +03:00 [INF] Fetching departments for faculty ID: Faculty of Computer Science
2024-09-29 23:18:04.637 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Id], [d].[DepartmentId], [d].[Faculty], [d].[Name]
FROM [Departments] AS [d]
WHERE [d].[Faculty] = @__faculty_0
2024-09-29 23:18:04.637 +03:00 [INF] Departments fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:18:04.637 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.DepartmentDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:18:04.637 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI) in 2.9468ms
2024-09-29 23:18:04.637 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllDepartments (UniversityAPI)'
2024-09-29 23:18:04.637 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allDepartments/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.5434ms
2024-09-29 23:18:06.671 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:18:06.671 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:18:06.671 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.6346ms
2024-09-29 23:18:06.674 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:18:06.674 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:18:06.674 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:18:06.674 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:18:06.675 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:18:06.679 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:18:06.689 +03:00 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:18:06.690 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:18:06.691 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:18:06.691 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:18:06.691 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 16.352ms
2024-09-29 23:18:06.691 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:18:06.691 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 17.1661ms
2024-09-29 23:18:06.692 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:18:06.692 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:18:06.692 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:18:06.692 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:18:06.692 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:18:06.694 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:18:06.696 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:18:06.698 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:18:06.698 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:18:06.698 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:18:06.698 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 6.0567ms
2024-09-29 23:18:06.698 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:18:06.698 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 6.7959ms
2024-09-29 23:26:41.048 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:26:41.049 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:26:41.050 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.4178ms
2024-09-29 23:26:41.050 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:26:41.050 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:26:41.050 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.5449ms
2024-09-29 23:26:41.052 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:26:41.053 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:26:41.053 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:26:41.054 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:26:41.054 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:26:41.759 +03:00 [INF] Executed DbCommand (450ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:26:41.839 +03:00 [INF] Executed DbCommand (79ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:26:41.840 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:26:41.841 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:26:41.841 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:26:41.841 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 787.4076ms
2024-09-29 23:26:41.841 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:26:41.841 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 789.2699ms
2024-09-29 23:26:41.842 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:26:41.843 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:26:41.843 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:26:41.843 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:26:41.843 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:26:41.845 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:26:41.847 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:26:41.849 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:26:41.849 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:26:41.849 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:26:41.849 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 6.3488ms
2024-09-29 23:26:41.850 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:26:41.850 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 7.3141ms
2024-09-29 23:29:00.987 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:29:00.989 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:29:00.989 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 2.1233ms
2024-09-29 23:29:00.996 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:29:00.997 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:29:00.997 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:29:00.997 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:29:00.997 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 2.0209ms
2024-09-29 23:29:01.035 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:29:01.035 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:29:01.036 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:29:01.211 +03:00 [INF] Executed DbCommand (175ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:29:01.250 +03:00 [INF] Executed DbCommand (38ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:29:01.252 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:29:01.252 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:29:01.252 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:29:01.252 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 217.0507ms
2024-09-29 23:29:01.253 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:29:01.253 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 256.1248ms
2024-09-29 23:29:01.253 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:29:01.253 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:29:01.254 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:29:01.254 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:29:01.255 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:29:01.257 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:29:01.258 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:29:01.259 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:29:01.259 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:29:01.260 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:29:01.260 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 5.7117ms
2024-09-29 23:29:01.260 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:29:01.260 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 6.6278ms
2024-09-29 23:32:15.984 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:32:15.987 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:32:15.987 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 2.9529ms
2024-09-29 23:32:15.989 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:32:15.990 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:32:15.990 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.9595ms
2024-09-29 23:32:15.993 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:32:15.993 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:32:15.994 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:32:15.995 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:32:15.995 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:32:17.036 +03:00 [INF] Executed DbCommand (1,039ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:32:17.483 +03:00 [INF] Executed DbCommand (445ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:32:17.484 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:32:17.484 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:32:17.484 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:32:17.485 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 1489.9115ms
2024-09-29 23:32:17.485 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:32:17.485 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 1492.3029ms
2024-09-29 23:32:17.486 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:32:17.486 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:32:17.486 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:32:17.486 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:32:17.486 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:32:17.489 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:32:17.490 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:32:17.490 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:32:17.490 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:32:17.490 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:32:17.491 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 4.4294ms
2024-09-29 23:32:17.491 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:32:17.491 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.1227ms
2024-09-29 23:33:46.981 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:33:46.984 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:33:46.986 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:33:46.986 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 5.4838ms
2024-09-29 23:33:46.986 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:33:46.987 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.2436ms
2024-09-29 23:33:46.990 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:33:46.991 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:33:46.992 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:33:46.993 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:33:46.998 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:33:47.108 +03:00 [INF] Executed DbCommand (109ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:33:47.139 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:33:47.141 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:33:47.141 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:33:47.141 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:33:47.142 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 148.9669ms
2024-09-29 23:33:47.142 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:33:47.142 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 154.7523ms
2024-09-29 23:33:47.147 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:33:47.148 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:33:47.148 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:33:47.148 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:33:47.148 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:33:47.155 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:33:47.159 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:33:47.161 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:33:47.161 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:33:47.161 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:33:47.161 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 13.4353ms
2024-09-29 23:33:47.161 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:33:47.162 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 14.2981ms
2024-09-29 23:38:08.983 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:38:08.983 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:38:08.983 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:38:08.983 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:38:08.984 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.6713ms
2024-09-29 23:38:08.984 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 1.9554ms
2024-09-29 23:38:08.989 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:38:08.990 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:38:08.990 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:38:08.990 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:38:08.991 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:38:09.089 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:38:09.101 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:38:09.103 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:38:09.103 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:38:09.104 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:38:09.104 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 113.5266ms
2024-09-29 23:38:09.104 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:38:09.104 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 114.8614ms
2024-09-29 23:38:09.105 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:38:09.105 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:38:09.106 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:38:09.106 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:38:09.106 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:38:09.108 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:38:09.109 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:38:09.110 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:38:09.110 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:38:09.110 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:38:09.110 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 4.2679ms
2024-09-29 23:38:09.110 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:38:09.110 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.2633ms
2024-09-29 23:39:26.713 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:39:26.713 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:39:26.715 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.9193ms
2024-09-29 23:39:26.717 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:39:26.717 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:39:26.718 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.8548ms
2024-09-29 23:39:26.718 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:39:26.718 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:39:26.720 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:26.721 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:39:26.722 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:39:26.727 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:39:26.737 +03:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:26.738 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:26.738 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:39:26.738 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:39:26.738 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 17.3565ms
2024-09-29 23:39:26.738 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:26.738 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 20.5364ms
2024-09-29 23:39:26.739 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:39:26.739 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:39:26.739 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:26.739 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:39:26.740 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:39:26.741 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:39:26.742 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:26.743 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:26.743 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:39:26.743 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:39:26.743 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 3.8977ms
2024-09-29 23:39:26.743 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:26.744 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 4.5055ms
2024-09-29 23:39:32.475 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:39:32.475 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:39:32.475 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.2756ms
2024-09-29 23:39:32.475 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:39:32.476 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:39:32.476 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:32.476 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:39:32.476 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:39:32.478 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:39:32.485 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:32.486 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:32.486 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:39:32.486 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:39:32.486 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 10.1414ms
2024-09-29 23:39:32.486 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:32.486 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 10.8005ms
2024-09-29 23:39:32.487 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:39:32.487 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:39:32.487 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:32.487 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:39:32.487 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:39:32.489 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:39:32.491 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:32.492 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:39:32.492 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:39:32.492 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:39:32.492 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 5.0587ms
2024-09-29 23:39:32.492 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:39:32.492 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.5161ms
2024-09-29 23:43:42.323 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:43:42.323 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:42.323 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.3232ms
2024-09-29 23:43:42.326 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:43:42.326 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:43:42.326 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:42.326 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:42.326 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.6676ms
2024-09-29 23:43:42.326 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:42.327 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:43:42.327 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:43:42.330 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:43:42.359 +03:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:42.360 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:42.360 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:43:42.360 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:43:42.360 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 33.3378ms
2024-09-29 23:43:42.360 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:42.360 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 34.4668ms
2024-09-29 23:43:42.361 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:43:42.361 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:42.362 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:42.362 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:43:42.362 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:43:42.365 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:43:42.369 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:42.369 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:42.369 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:43:42.369 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:43:42.370 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 7.9661ms
2024-09-29 23:43:42.370 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:42.370 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 8.7602ms
2024-09-29 23:43:45.389 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/course/MSITCS - null null
2024-09-29 23:43:45.389 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:45.389 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/course/MSITCS - 204 null null 0.1964ms
2024-09-29 23:43:45.390 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - null null
2024-09-29 23:43:45.390 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:45.390 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI)'
2024-09-29 23:43:45.394 +03:00 [INF] Route matched with {action = "GetCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:43:45.443 +03:00 [INF] Fetching course: MSITCS
2024-09-29 23:43:45.500 +03:00 [INF] Executed DbCommand (53ms) [Parameters=[@__courseId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[CourseId] = @__courseId_0
2024-09-29 23:43:45.503 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:45.503 +03:00 [INF] Course fetched successfully: MSITCS
2024-09-29 23:43:45.503 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.CourseDTO'.
2024-09-29 23:43:45.503 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI) in 109.4791ms
2024-09-29 23:43:45.503 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI)'
2024-09-29 23:43:45.503 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - 200 null application/json; charset=utf-8 113.5664ms
2024-09-29 23:43:45.504 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - null null
2024-09-29 23:43:45.504 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:45.505 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI)'
2024-09-29 23:43:45.505 +03:00 [INF] Route matched with {action = "GetCourse", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCourse(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:43:45.505 +03:00 [INF] Fetching course: MSITCS
2024-09-29 23:43:45.507 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__courseId_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[CourseId] = @__courseId_0
2024-09-29 23:43:45.508 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:45.508 +03:00 [INF] Course fetched successfully: MSITCS
2024-09-29 23:43:45.508 +03:00 [INF] Executing OkObjectResult, writing value of type 'UniversityAPI.Application.DTOs.CourseDTO'.
2024-09-29 23:43:45.508 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI) in 3.6759ms
2024-09-29 23:43:45.508 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetCourse (UniversityAPI)'
2024-09-29 23:43:45.508 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/course/MSITCS - 200 null application/json; charset=utf-8 4.066ms
2024-09-29 23:43:57.341 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:43:57.341 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:57.341 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.143ms
2024-09-29 23:43:57.342 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:43:57.342 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:57.342 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:57.342 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:43:57.343 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:43:57.345 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:43:57.346 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:57.347 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:57.347 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:43:57.347 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:43:57.348 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 5.2111ms
2024-09-29 23:43:57.348 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:57.348 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 5.845ms
2024-09-29 23:43:57.348 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:43:57.348 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:43:57.348 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:57.348 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:43:57.349 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:43:57.350 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:43:57.351 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:57.352 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:43:57.352 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:43:57.352 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:43:57.352 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 3.4291ms
2024-09-29 23:43:57.352 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:43:57.352 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.9655ms
2024-09-29 23:48:34.284 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:48:34.284 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:48:34.285 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.6269ms
2024-09-29 23:48:34.285 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:48:34.287 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:48:34.288 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 2.9206ms
2024-09-29 23:48:34.289 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:48:34.289 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:48:34.324 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:48:34.353 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:48:34.354 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:48:34.356 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:48:34.362 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:48:34.363 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:48:34.363 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:48:34.363 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:48:34.364 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 10.0313ms
2024-09-29 23:48:34.364 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:48:34.364 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 74.5253ms
2024-09-29 23:48:34.364 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:48:34.364 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:48:34.365 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:48:34.365 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:48:34.365 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:48:34.367 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:48:34.400 +03:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:48:34.401 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:48:34.401 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:48:34.401 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:48:34.401 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 36.2498ms
2024-09-29 23:48:34.401 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:48:34.401 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 36.9601ms
2024-09-29 23:49:04.484 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:49:04.484 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:49:04.484 +03:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:49:04.484 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.3375ms
2024-09-29 23:49:04.484 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:49:04.485 +03:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 204 null null 0.6007ms
2024-09-29 23:49:04.488 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:49:04.488 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:49:04.489 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:49:04.489 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:49:04.489 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:49:04.492 +03:00 [INF] Executed DbCommand (2ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:49:04.495 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:49:04.496 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:49:04.496 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:49:04.496 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:49:04.496 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 7.4261ms
2024-09-29 23:49:04.496 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:49:04.497 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 9.279ms
2024-09-29 23:49:04.497 +03:00 [INF] Request starting HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - null null
2024-09-29 23:49:04.497 +03:00 [INF] CORS policy execution successful.
2024-09-29 23:49:04.497 +03:00 [INF] Executing endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:49:04.497 +03:00 [INF] Route matched with {action = "GetAllCourses", controller = "Employee"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCourses(System.String) on controller UniversityAPI.Controllers.EmployeeController (UniversityAPI).
2024-09-29 23:49:04.498 +03:00 [INF] Fetching courses for faculty ID: Faculty of Computer Science
2024-09-29 23:49:04.499 +03:00 [INF] Executed DbCommand (1ms) [Parameters=[@__faculty_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[ContainsPracticalOrProject], [c].[CourseId], [c].[CreditHours], [c].[Faculty], [c].[FinalExam], [c].[HaveAssistants], [c].[MidTerm], [c].[Name], [c].[Practical], [c].[Quizzes], [c].[Semester], [c].[TotalMarks]
FROM [Courses] AS [c]
WHERE [c].[Faculty] = @__faculty_0
2024-09-29 23:49:04.500 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:49:04.501 +03:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[DepartmentId], [t].[Faculty], [t].[Name], [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t0].[CoursesId], [t0].[DepartmentsId], [t0].[Id], [t0].[ContainsPracticalOrProject], [t0].[CourseId], [t0].[CreditHours], [t0].[Faculty], [t0].[FinalExam], [t0].[HaveAssistants], [t0].[MidTerm], [t0].[Name], [t0].[Practical], [t0].[Quizzes], [t0].[Semester], [t0].[TotalMarks]
FROM [Courses] AS [c]
INNER JOIN (
    SELECT [d0].[Id], [d0].[DepartmentId], [d0].[Faculty], [d0].[Name], [d].[CoursesId], [d].[DepartmentsId]
    FROM [DepartmentCourses] AS [d]
    INNER JOIN [Departments] AS [d0] ON [d].[DepartmentsId] = [d0].[Id]
) AS [t] ON [c].[Id] = [t].[CoursesId]
LEFT JOIN (
    SELECT [d1].[CoursesId], [d1].[DepartmentsId], [c0].[Id], [c0].[ContainsPracticalOrProject], [c0].[CourseId], [c0].[CreditHours], [c0].[Faculty], [c0].[FinalExam], [c0].[HaveAssistants], [c0].[MidTerm], [c0].[Name], [c0].[Practical], [c0].[Quizzes], [c0].[Semester], [c0].[TotalMarks]
    FROM [DepartmentCourses] AS [d1]
    INNER JOIN [Courses] AS [c0] ON [d1].[CoursesId] = [c0].[Id]
    WHERE [c0].[Id] = @__p_0
) AS [t0] ON [t].[Id] = [t0].[DepartmentsId]
WHERE [c].[Id] = @__p_0
ORDER BY [c].[Id], [t].[CoursesId], [t].[DepartmentsId], [t].[Id], [t0].[CoursesId], [t0].[DepartmentsId]
2024-09-29 23:49:04.501 +03:00 [INF] Courses fetched successfully for faculty ID: Faculty of Computer Science
2024-09-29 23:49:04.501 +03:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[UniversityAPI.Application.DTOs.CourseDTO, UniversityAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2024-09-29 23:49:04.501 +03:00 [INF] Executed action UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI) in 3.3654ms
2024-09-29 23:49:04.501 +03:00 [INF] Executed endpoint 'UniversityAPI.Controllers.EmployeeController.GetAllCourses (UniversityAPI)'
2024-09-29 23:49:04.501 +03:00 [INF] Request finished HTTP/1.1 GET http://localhost:5101/api/Employee/get/allCourses/Faculty of Computer Science - 200 null application/json; charset=utf-8 3.8696ms
